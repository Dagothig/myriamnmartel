-
    function t(key) {
        const fixed = { en: 'English', fr: 'Français' };
        return translations[key] || fixed[key] || `t:${key}`
    }

mixin t(key)
    =t(key)

mixin space()
  | !{' '}

mixin nav(nav, current)
    a(
        class=nav === current ? 'active' : undefined
        href=`${language !== 'fr' ? '/' + language : ''}/${nav !== 'index' ? nav : ''}`
    ): +t(nav)

mixin lang(lang, current)
    a(
        class=lang === current ? 'active' : undefined
        href=`/${lang}`
    ): +t(lang)

mixin link(href)
    a(href=href, target="_blank", rel="noopener noreferrer")&attributes(attributes)
        block

doctype html
html#top(lang=language)
    head
        block head

        title=`${ title } - ${ t("meta.title") }`
        meta(http-equiv="Content-Type" content="text/html;charset=UTF-8")
        meta(name="charset" content="UTF-8")
        meta(name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no")
        meta(name="author" content=t("meta.author"))
        meta(name="description" content=t("meta.description"))

        meta(property="og:title" content=`${ title } - ${ t("meta.title") }`)
        meta(property="og:type" content="website")
        meta(property="og:description" content=t("meta.description"))
        meta(property="og:site_name" content=t("meta.title"))
        meta(property="og:url" content="https://catiniata.art/")
        meta(property="og:image" content="https://catiniata.art/favicon-196.png")
        meta(property="og:image:alt" content=t("meta.title"))
        meta(name="twitter:card" content="summary_large_image")
        meta(name="twitter:image:alt" content=t("meta.title"))

        link(rel="stylesheet" href="/style.css")

        each favicon in favicons
            - const size = favicon.split('-')[1].split('.')[0]
            link(rel="icon" href=`/${favicon}` sizes=`${size}x${size}`)
    body
        h1
            a(href=`/${language !== 'fr' ? language : ''}`, tabindex="-1") Catiniata
            p.title: +t("title")
            p.subtitle: +t("subtitle")
        nav
            block nav
            +nav("index", current)
            +nav("shop", current)
            each other in languages.filter(other => other !== language)
                a(href=`${other !== 'fr' ? '/' + other : ''}/${current !== 'index' ? current : ''}`)
                    +t(other)
            .brands
                +link(href="https://www.etsy.com/ca-fr/shop/Catiniata", class="brand")
                    img(src="/svg/etsy-brands.svg", alt="Esty")
                +link(href="https://www.instagram.com/catiniata", class="brand")
                    img(src="/svg/instagram-brands.svg", alt="Instagram")
                +link(href="https://www.facebook.com/catiniata", class="brand")
                    img(src="/svg/facebook-f-brands.svg", alt="Facebook")
        block content
        footer © #{(new Date()).getFullYear()} Myriam Noël-Martel
            br
            br
            +link(href="https://www.etsy.com/ca-fr/shop/Catiniata", class="brand")
                img(src="/svg/etsy-brands.svg", alt="Esty")
            +link(href="https://www.instagram.com/catiniata", class="brand")
                img(src="/svg/instagram-brands.svg", alt="Instagram")
            +link(href="https://www.facebook.com/catiniata", class="brand")
                img(src="/svg/facebook-f-brands.svg", alt="Facebook")
            br
            br
            | Icônes de branding courtoisie de
            +space()
            +link("https://fontawesome.com/")|fontawesome
        a.top-link(href="#top") ­>
        script.
            const nav = document.querySelector('nav');
            const toplink = document.querySelector('.top-link');
            document.addEventListener('scroll', () => {
                const cutoff = nav.offsetTop + nav.offsetHeight;
                const shouldShow = document.documentElement.scrollTop > cutoff;
                toplink.classList[shouldShow ? 'add' : 'remove']('show');
            }, { passive: true });
